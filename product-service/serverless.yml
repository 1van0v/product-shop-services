service: product-service
frameworkVersion: '2'
useDotenv: true

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  region: eu-west-1
  httpApi:
    cors: true

  environment:
    DB_HOST: ${env:PG_HOST}
    DB_PORT: ${env:PG_PORT}
    DB_NAME: ${env:PG_NAME}
    DB_USER: ${env:PG_USER}
    DB_PASSWORD: ${env:PG_PASSWORD}
    SNS_ARN: 
      Ref: createProductTopic

  iamRoleStatements:
    - Effect: Allow
      Action: 'sqs:*'
      Resource:
        - Fn::GetAtt: [catalogItemsQueue, Arn]
    - Effect: Allow
      Action: 'sns:*'
      Resource:
        Ref: createProductTopic

resources:
  Resources:
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
        ReceiveMessageWaitTimeSeconds: 20
    createProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: ivanov5oleksandr@gmail.com
        Protocol: email
        TopicArn:
          Ref: createProductTopic

functions:
  getProductsList:
    handler: handlers/products-list.getProductsList
    events:
      - httpApi:
          method: get
          path: /products
  
  getProductsById:
    handler: handlers/products.getProductsById
    events:
      - httpApi:
          method: get
          path: /products/{productId}

  createProduct:
    handler: handlers/add-product.createProduct
    events:
      - httpApi:
          method: post
          path: /products
  
  catalogBatchProcess:
    handler: handlers/batch-processor.catalogBatchProcess
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - catalogItemsQueue
              - Arn
          batchSize: 5
